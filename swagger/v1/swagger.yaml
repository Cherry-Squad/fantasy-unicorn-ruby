---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/achievements/":
    post:
      summary: Create an achievement
      tags:
      - Achievement
      parameters: []
      responses:
        '201':
          description: achievement created
          content:
            application/json:
              example:
                id: 1
                user_id: 1
                achievement_identifier: 42
                created_at: '2022-01-09T16:04:22.262Z'
                updated_at: '2022-01-09T16:04:22.262Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                achievement_identifier:
                  type: string
              required:
              - achievement_identifier
    get:
      summary: Get all achievements
      tags:
      - Achievement
      responses:
        '200':
          description: get all achievement
          content:
            application/json:
              example:
              - id: 2
                user_id: 2
                achievement_identifier: 45
                created_at: '2022-01-09T16:04:22.552Z'
                updated_at: '2022-01-09T16:04:22.552Z'
              - id: 3
                user_id: 2
                achievement_identifier: 759
                created_at: '2022-01-09T16:04:22.555Z'
                updated_at: '2022-01-09T16:04:22.555Z'
  "/api/v1/achievements/{id}/":
    delete:
      summary: delete an achievement
      tags:
      - Achievement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: achievement successfully deleted
        '404':
          description: Not found 404
          content:
            application/json:
              example:
                status: Not Found 404
    get:
      summary: Retrieve an achievement
      tags:
      - Achievement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: achievement found
          content:
            application/json:
              example:
                id: 6
                user_id: 5
                achievement_identifier: 284
                created_at: '2022-01-09T16:04:23.461Z'
                updated_at: '2022-01-09T16:04:23.461Z'
        '404':
          description: achievement not found
          content:
            application/json:
              example:
                status: Not Found 404
  "/api/v1/auth/":
    post:
      summary: Create a user
      tags:
      - Auth
      parameters: []
      security: []
      responses:
        '200':
          description: user created
          content:
            application/json:
              example:
                status: success
                data:
                  id: 7
                  username: tonita#7
                  email: cleo@kiehn.org
                  email_validated: false
                  preferred_lang: ru_RU
                  avatar_id: 
                  coins: 200
                  fantasy_points: 0
                  created_at: '2022-01-09T16:04:24.324Z'
                  updated_at: '2022-01-09T16:04:24.324Z'
                  provider: email
                  uid: cleo@kiehn.org
                  allow_password_change: false
        '422':
          description: incorrect email or username; email and/or username has already
            been taken
          content:
            application/json:
              example:
                status: error
                data:
                  id: 
                  username: madonna.koepp#12
                  email: kenton.hane
                  email_validated: false
                  preferred_lang: ru_RU
                  avatar_id: 
                  coins: 200
                  fantasy_points: 0
                  created_at: 
                  updated_at: 
                  provider: email
                  uid: ''
                  allow_password_change: false
                errors:
                  email:
                  - is not an email
                  full_messages:
                  - Email is not an email
                  username:
                  - is too short (minimum is 3 characters)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - username
              - email
              - password
    delete:
      summary: Delete a user
      tags:
      - Auth
      responses:
        '200':
          description: user successfully deleted
          content:
            application/json:
              example:
                status: success
                message: Account with UID 'india.gutkowski@veum-corwin.name' has been
                  destroyed.
        '404':
          description: credentials are invalid
          content:
            application/json:
              example:
                success: false
                errors:
                - Unable to locate account for destruction.
                status: error
  "/api/v1/auth/sign_in":
    post:
      summary: Sign in
      tags:
      - Auth
      parameters: []
      security: []
      responses:
        '200':
          description: logged in
          headers:
            access-token:
              type: string
              description: Access token
            client:
              type: string
              description: Client token
            uid:
              type: string
              description: User identifier
            expiry:
              type: string
              description: Token expiry timestamp
          content:
            application/json:
              example:
                data:
                  email: ruthann.fisher@mitchell.net
                  email_validated: false
                  id: 12
                  fantasy_points: 0
                  coins: 200
                  uid: ruthann.fisher@mitchell.net
                  username: lavern.wolf#15
                  preferred_lang: ru_RU
                  avatar_id: 
                  provider: email
                  allow_password_change: false
        '401':
          description: credentials are invalid; email is not confirmed
          content:
            application/json:
              example:
                success: false
                errors:
                - Invalid login credentials. Please try again.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/auth/sign_out":
    delete:
      summary: Sign out
      tags:
      - Auth
      responses:
        '200':
          description: signed out
          content:
            application/json:
              example:
                success: true
        '404':
          description: credentials are invalid
          content:
            application/json:
              example:
                success: false
                errors:
                - User was not found or was not logged in.
  "/api/v1/auth/validate_token":
    get:
      summary: Validate token
      tags:
      - Auth
      responses:
        '200':
          description: token is valid
          content:
            application/json:
              example:
                success: true
                data:
                  id: 20
                  username: don.collins#23
                  email: vivien_schimmel@jakubowski.info
                  email_validated: false
                  preferred_lang: ru_RU
                  avatar_id: 
                  coins: 200
                  fantasy_points: 0
                  provider: email
                  uid: vivien_schimmel@jakubowski.info
                  allow_password_change: false
        '401':
          description: credentials are invalid
          content:
            application/json:
              example:
                success: false
                errors:
                - Invalid login credentials
  "/api/v1/auth/confirmation":
    post:
      summary: Resend confirmation
      tags:
      - Auth
      parameters: []
      security: []
      responses:
        '200':
          description: confirmation sent
          content:
            application/json:
              example:
                success: true
                message: An email has been sent to 'jeane@waters-abshire.biz' containing
                  instructions for confirming your account.
        '404':
          description: email is invalid
          content:
            application/json:
              example:
                success: false
                errors:
                - Unable to find user with email 'kennith@kovacek.org'.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
  "/api/v1/auth/password":
    put:
      summary: Change password
      tags:
      - Auth
      description: Change password
      parameters: []
      responses:
        '200':
          description: password has been updated
          content:
            application/json:
              example:
                success: true
                data:
                  email: sandy@moore.info
                  email_validated: false
                  id: 24
                  fantasy_points: 0
                  coins: 200
                  uid: sandy@moore.info
                  username: tammi#27
                  preferred_lang: ru_RU
                  avatar_id: 
                  created_at: '2022-01-09T16:04:32.271Z'
                  updated_at: '2022-01-09T16:04:32.563Z'
                  provider: email
                  allow_password_change: false
                message: Your password has been successfully updated.
        '422':
          description: must fill out the fields password; doesn't match password
          content:
            application/json:
              example:
                success: false
                errors:
                  password_confirmation:
                  - doesn't match Password
                  full_messages:
                  - Password confirmation doesn't match Password
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                success: false
                errors:
                - Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - password
              - password_confirmation
  "/api/v1/auth/password/":
    put:
      summary: Change password with reset_password_token
      tags:
      - Auth
      description: Set password that was reset
      parameters: []
      security: []
      responses:
        '200':
          description: password has been updated
          content:
            application/json:
              example:
                success: true
                data:
                  email: celestina@altenwerth-marks.biz
                  email_validated: false
                  id: 28
                  fantasy_points: 0
                  coins: 200
                  uid: celestina@altenwerth-marks.biz
                  username: georgeann#31
                  preferred_lang: ru_RU
                  avatar_id: 
                  created_at: '2022-01-09T16:04:34.063Z'
                  updated_at: '2022-01-09T16:04:34.487Z'
                  provider: email
                  allow_password_change: false
                message: Your password has been successfully updated.
        '422':
          description: must fill out the fields password; doesn't match password
          content:
            application/json:
              example:
                success: false
                errors:
                  password_confirmation:
                  - doesn't match Password
                  full_messages:
                  - Password confirmation doesn't match Password
        '401':
          description: unauthorized
          content:
            application/json:
              example:
                success: false
                errors:
                - Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                password_confirmation:
                  type: string
                reset_password_token:
                  type: string
              required:
              - password
              - password_confirmation
              - reset_password_token
    post:
      summary: Send a password reset email
      tags:
      - Auth
      parameters: []
      security: []
      responses:
        '200':
          description: email has been sent
          content:
            application/json:
              example:
                success: true
                message: An email has been sent to 'akilah_mitchell@kris.io' containing
                  instructions for resetting your password.
        '401':
          description: missing email
          content:
            application/json:
              example:
                success: false
                errors:
                - You must provide an email address.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
  "/api/v1/briefcases/":
    post:
      summary: Create a briefcase
      tags:
      - Briefcase
      responses:
        '201':
          description: briefcase created
          content:
            application/json:
              example:
                id: 1
                expiring_at: '2022-01-16T16:04:36.636Z'
                user_id: 34
                created_at: '2022-01-09T16:04:36.652Z'
                updated_at: '2022-01-09T16:04:36.652Z'
    get:
      summary: Get all briefcases
      tags:
      - Briefcase
      responses:
        '200':
          description: get all briefcases for current user
          content:
            application/json:
              example:
              - id: 2
                expiring_at: '2022-11-21T00:00:00.000Z'
                user_id: 35
                created_at: '2022-01-09T16:04:36.956Z'
                updated_at: '2022-01-09T16:04:36.956Z'
  "/api/v1/briefcases/{id}/":
    delete:
      summary: delete a briefcase
      tags:
      - Briefcase
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: briefcase successfully deleted
        '404':
          description: Not found 404
          content:
            application/json:
              example:
                status: Not Found 404
    get:
      summary: Retrieve a briefcase
      tags:
      - Briefcase
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: briefcase connected with current user found
          content:
            application/json:
              example:
                id: 5
                expiring_at: '2022-04-07T00:00:00.000Z'
                user_id: 38
                created_at: '2022-01-09T16:04:37.879Z'
                updated_at: '2022-01-09T16:04:37.879Z'
        '404':
          description: briefcase not found
          content:
            application/json:
              example:
                status: Not Found 404
    patch:
      summary: Update a briefcase
      tags:
      - Briefcase
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '404':
          description: briefcase not found
          content:
            application/json:
              example:
                status: Not Found 404
        '201':
          description: briefcase updated
          content:
            application/json:
              example:
                id: 9
                expiring_at: '2022-12-15T00:00:00.000Z'
                user_id: 42
                created_at: '2022-01-09T16:04:39.137Z'
                updated_at: '2022-01-09T16:04:39.137Z'
        '400':
          description: stock not found
          content:
            application/json:
              example:
                status: Bad Request ( Stock not Found )
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                stock_id:
                  type: integer
                add:
                  type: boolean
  "/api/v1/briefcases/{id}/stocks/":
    get:
      summary: Get stocks by briefcase id
      tags:
      - Briefcase
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: stocks in briefcase
          content:
            application/json:
              example:
              - id: 5
                name: qofy0u
                created_at: '2022-01-09T16:04:39.784Z'
                updated_at: '2022-01-09T16:04:39.784Z'
              - id: 6
                name: xbpiki
                created_at: '2022-01-09T16:04:39.787Z'
                updated_at: '2022-01-09T16:04:39.787Z'
        '404':
          description: not found
          content:
            application/json:
              example:
                status: Not Found 404
  "/api/v1/contest_applications/":
    post:
      summary: Create a contest application
      tags:
      - ContestApplication
      parameters: []
      responses:
        '201':
          description: contest application created
          content:
            application/json:
              example:
                id: 1
                user_id: 47
                contest_id: 1
                final_position: 
                coins_delta: 
                fantasy_points_delta: 
                created_at: '2022-01-09T16:04:41.022Z'
                updated_at: '2022-01-09T16:04:41.022Z'
        '400':
          description: contest application created
          content:
            application/json:
              example:
                error: An Error occurred ["User must exist"]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                contest_id:
                  type: integer
              required:
              - user_id
              - contest_id
    get:
      summary: Get contest applications
      parameters:
      - name: contest_id
        in: query
        required: false
        schema:
          type: integer
      tags:
      - ContestApplication
      responses:
        '200':
          description: |-
            get all contest applications for current user if contest_id not set otherwise returns all
                                   contest applications by contest_id
          content:
            application/json:
              example:
              - id: 3
                user_id: 54
                contest_id: 6
                final_position: 
                coins_delta: 
                fantasy_points_delta: 
                created_at: '2022-01-09T16:04:42.821Z'
                updated_at: '2022-01-09T16:04:42.821Z'
  "/api/v1/contest_applications/{id}/":
    delete:
      summary: delete a contest application
      tags:
      - ContestApplication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: contest application successfully deleted
        '404':
          description: contest application not found
          content:
            application/json:
              example:
                status: Not Found 404
    get:
      summary: Retrieve a contest application
      tags:
      - ContestApplication
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: contest application found
          content:
            application/json:
              example:
                id: 6
                user_id: 57
                contest_id: 12
                final_position: 
                coins_delta: 
                fantasy_points_delta: 
                created_at: '2022-01-09T16:04:43.782Z'
                updated_at: '2022-01-09T16:04:43.782Z'
        '404':
          description: contest application not found
          content:
            application/json:
              example:
                status: Not Found 404
  "/api/v1/contest_application_stocks/":
    post:
      summary: Create a contest application stock
      tags:
      - ContestApplicationStock
      parameters: []
      responses:
        '201':
          description: contest application stock created
          content:
            application/json:
              example:
                id: 1
                contest_application_id: 8
                stock_id: 7
                multiplier: '10.0'
                reg_price: 
                final_price: 
                created_at: '2022-01-09T16:04:45.030Z'
                updated_at: '2022-01-09T16:04:45.030Z'
                direction_up: true
        '400':
          description: contest application stock created
          content:
            application/json:
              example:
                error: An Error occurred ["Stock must exist"]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                stock_id:
                  type: integer
                contest_application_id:
                  type: integer
                multiplier:
                  type: integer
                direction_up:
                  type: boolean
              required:
              - multiplier
              - stock_id
              - contest_application_id
    get:
      summary: Get contest application stock stocks
      tags:
      - ContestApplicationStock
      parameters:
      - name: contest_id
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: |-
            get all contest application stocks if contest_id not set otherwise returns all
                                   contest applications by contest_id
          content:
            application/json:
              example:
              - id: 4
                contest_application_id: 12
                stock_id: 11
                multiplier: '1.0'
                reg_price: '1260.6231'
                final_price: 
                created_at: '2022-01-09T16:04:47.215Z'
                updated_at: '2022-01-09T16:04:47.215Z'
                direction_up: true
                stock:
                  id: 11
                  name: TM
                  created_at: '2022-01-09T16:04:46.919Z'
                  updated_at: '2022-01-09T16:04:46.919Z'
              - id: 5
                contest_application_id: 13
                stock_id: 12
                multiplier: '1.0'
                reg_price: '4758.4954'
                final_price: 
                created_at: '2022-01-09T16:04:47.221Z'
                updated_at: '2022-01-09T16:04:47.221Z'
                direction_up: false
                stock:
                  id: 12
                  name: V
                  created_at: '2022-01-09T16:04:47.208Z'
                  updated_at: '2022-01-09T16:04:47.208Z'
  "/api/v1/contest_application_stocks/{id}/":
    delete:
      summary: delete a contest application stock
      tags:
      - ContestApplicationStock
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: contest application successfully deleted
        '404':
          description: contest application not found
          content:
            application/json:
              example:
                status: Not Found 404
    get:
      summary: Retrieve a contest application stock
      tags:
      - ContestApplicationStock
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: contest application stock found
          content:
            application/json:
              example:
                id: 8
                contest_application_id: 19
                stock_id: 18
                multiplier: '1.0'
                reg_price: '3905.7676'
                final_price: 
                created_at: '2022-01-09T16:04:49.925Z'
                updated_at: '2022-01-09T16:04:49.925Z'
                direction_up: true
        '404':
          description: contest application stock not found
          content:
            application/json:
              example:
                status: Not Found 404
  "/api/v1/contests/{id}/register":
    post:
      summary: Register user in contest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      tags:
      - Contest
      responses:
        '201':
          description: |-
            contest application created. contest application stocks created.
                    assign contest application stocks
          content:
            application/json:
              example:
                contest_app_stocks:
                - id: 10
                  contest_application_id: 22
                  stock_id: 21
                  multiplier: '1.2'
                  reg_price: 
                  final_price: 
                  created_at: '2022-01-09T16:04:51.470Z'
                  updated_at: '2022-01-09T16:04:51.470Z'
                  direction_up: true
        '404':
          description: contest not found
          content:
            application/json:
              example:
                status: Not Found 404
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    properties:
                      stock_id:
                        type: integer
                      multiplier:
                        type: integer
                      direction_up:
                        type: boolean
                    required:
                    - multiplier
                    - stock_id
                    - contest_application_id
                    - direction_up
  "/api/v1/contests/":
    post:
      summary: Create a contest
      tags:
      - Contest
      parameters: []
      responses:
        '201':
          description: contest created
          content:
            application/json:
              example:
                id: 31
                reg_ending_at: '2022-01-10T00:00:00.000Z'
                summarizing_at: '2022-01-16T00:00:00.000Z'
                status: created
                coins_entry_fee: 2608500169
                max_fantasy_points_threshold: 1815390329
                use_briefcase_only: true
                direction_strategy: single_per_user
                fixed_direction_up: 
                use_disabled_multipliers: false
                use_inverted_stock_prices: false
                created_at: '2022-01-09T16:04:52.310Z'
                updated_at: '2022-01-09T16:04:52.310Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                coins_entry_fee:
                  type: integer
                direction_strategy:
                  type: string
                fixed_direction_up:
                  type: boolean
                max_fantasy_points_threshold:
                  type: integer
                reg_ending_at:
                  type: string
                status:
                  type: string
                summarizing_at:
                  type: string
                use_briefcase_only:
                  type: boolean
                use_disabled_multipliers:
                  type: boolean
                use_inverted_stock_prices:
                  type: boolean
              required:
              - coins_entry_fee
              - direction_strategy
              - fixed_direction_up
              - max_fantasy_points_threshold
              - reg_ending_at
              - status
              - summarizing_at
              - use_briefcase_only
              - use_disabled_multipliers
              - use_inverted_stock_prices
    get:
      summary: Get contests
      parameters:
      - name: fixed_direction_up
        in: query
        required: false
        nullable: true
        schema:
          type: boolean
      - name: use_briefcase_only
        in: query
        required: false
        nullable: true
        schema:
          type: boolean
      - name: use_disabled_multipliers
        in: query
        required: false
        nullable: true
        schema:
          type: boolean
      - name: use_inverted_stock_prices
        in: query
        required: false
        nullable: true
        schema:
          type: boolean
      - name: status
        in: query
        required: false
        nullable: true
        schema:
          type: string
      - name: direction_strategy
        in: query
        required: false
        nullable: true
        schema:
          type: string
      - name: coins_entry_fee_min_edge
        in: query
        required: false
        nullable: true
        schema:
          type: integer
      - name: coins_entry_fee_max_edge
        in: query
        required: false
        nullable: true
        schema:
          type: integer
      - name: max_fantasy_points_threshold
        in: query
        required: false
        nullable: true
        schema:
          type: integer
      tags:
      - Contest
      responses:
        '200':
          description: get contests
          content:
            application/json:
              example:
              - id: 94
                reg_ending_at: '2022-01-12T00:00:00.000Z'
                summarizing_at: '2022-01-16T00:00:00.000Z'
                status: created
                coins_entry_fee: 6543232450
                max_fantasy_points_threshold: 3157584468
                use_briefcase_only: true
                direction_strategy: fixed
                fixed_direction_up: false
                use_disabled_multipliers: false
                use_inverted_stock_prices: false
                created_at: '2022-01-09T16:04:54.713Z'
                updated_at: '2022-01-09T16:04:54.713Z'
  "/api/v1/contests/{id}/":
    delete:
      summary: delete a contest
      tags:
      - Contest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: contest successfully deleted
        '404':
          description: contest not found
          content:
            application/json:
              example:
                status: Not Found 404
    get:
      summary: Retrieve a contest
      tags:
      - Contest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: contest found
          content:
            application/json:
              example:
                id: 98
                reg_ending_at: '2022-01-11T00:00:00.000Z'
                summarizing_at: '2022-01-13T00:00:00.000Z'
                status: created
                coins_entry_fee: 5413240846
                max_fantasy_points_threshold: 9461151139
                use_briefcase_only: true
                direction_strategy: fixed
                fixed_direction_up: false
                use_disabled_multipliers: false
                use_inverted_stock_prices: false
                created_at: '2022-01-09T16:04:55.679Z'
                updated_at: '2022-01-09T16:04:55.679Z'
        '404':
          description: contest not found
          content:
            application/json:
              example:
                status: Not Found 404
  "/api/v1/stocks/":
    post:
      summary: Create a stock
      tags:
      - Stock
      parameters: []
      responses:
        '201':
          description: stock created
          content:
            application/json:
              example:
                id: 23
                name: NVDA
                created_at: '2022-01-09T16:04:56.664Z'
                updated_at: '2022-01-09T16:04:56.664Z'
        '400':
          description: stock not created
          content:
            application/json:
              example:
                error: An Error occurred Finnhub couldn't find symbol 71ce
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    get:
      summary: Get stocks
      tags:
      - Stock
      responses:
        '200':
          description: get all stocks
          content:
            application/json:
              example:
              - id: 26
                name: BKNG
                created_at: '2022-01-09T16:05:01.396Z'
                updated_at: '2022-01-09T16:05:01.396Z'
  "/api/v1/stocks/{id}/":
    delete:
      summary: delete a stock
      tags:
      - Stock
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: stock successfully deleted
        '404':
          description: Not found 404
          content:
            application/json:
              example:
                status: Not Found 404
    get:
      summary: Retrieve a stock
      tags:
      - Stock
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: stock found
          content:
            application/json:
              example:
                id: 29
                name: TM
                created_at: '2022-01-09T16:05:02.352Z'
                updated_at: '2022-01-09T16:05:02.352Z'
        '404':
          description: stock not found
          content:
            application/json:
              example:
                status: Not Found 404
  "/api/v1/stocks/suggestions/":
    get:
      summary: Get 10 stocks
      tags:
      - Stock
      responses:
        '200':
          description: get 10 stocks
          content:
            application/json:
              example:
              - id: 60
                name: 879ig
              - id: 42
                name: gxopd
              - id: 56
                name: as4apw18
              - id: 32
                name: t0ca0
              - id: 39
                name: 6rut3mm
  "/api/v1/stocks/name/{name}/":
    get:
      summary: Retrieve a stock by name
      tags:
      - Stock
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: stock found
          content:
            application/json:
              example:
                id: 61
                name: NFLX
                created_at: '2022-01-09T16:05:03.626Z'
                updated_at: '2022-01-09T16:05:03.626Z'
        '404':
          description: stock not found
          content:
            application/json:
              example:
                status: Not Found 404
  "/api/v1/users/":
    get:
      summary: Get users
      tags:
      - User
      responses:
        '200':
          description: get all users
          content:
            application/json:
              example:
              - id: 109
                username: sheryl_volkman#112
                email: elizebeth@kihn-langosh.co
                email_validated: false
                preferred_lang: ru_RU
                avatar_id: 
                coins: 200
                fantasy_points: 0
                created_at: '2022-01-09T16:05:04.529Z'
                updated_at: '2022-01-09T16:05:04.536Z'
                provider: email
                uid: elizebeth@kihn-langosh.co
                allow_password_change: false
    patch:
      summary: update a user
      tags:
      - User
      parameters: []
      responses:
        '201':
          description: user updated
          content:
            application/json:
              example:
                username: test
                coins: 3
                email: christoper@bahringer-little.biz
                email_validated: false
                id: 110
                fantasy_points: 0
                uid: christoper@bahringer-little.biz
                preferred_lang: ru_RU
                avatar_id: 
                created_at: '2022-01-09T16:05:04.848Z'
                updated_at: '2022-01-09T16:05:04.869Z'
                provider: email
                allow_password_change: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: email
                preferred_lang:
                  type: string
                fantasy_points:
                  type: integer
                coins:
                  type: integer
  "/api/v1/users/{id}/":
    get:
      summary: Retrieve a user
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: user found
          content:
            application/json:
              example:
                id: 111
                username: dorian.ferry#114
                email: kyle@dare.info
                email_validated: false
                preferred_lang: ru_RU
                avatar_id: 
                coins: 200
                fantasy_points: 0
                created_at: '2022-01-09T16:05:05.164Z'
                updated_at: '2022-01-09T16:05:05.164Z'
                provider: email
                uid: kyle@dare.info
                allow_password_change: false
        '404':
          description: stock not found
  "/api/v1/users/contest_applications/{id}/":
    get:
      summary: Get contest application for current user by id
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: get contest application by id
          content:
            application/json:
              example:
                id: 23
                user_id: 115
                contest_id: 100
                final_position: 
                coins_delta: 
                fantasy_points_delta: 
                created_at: '2022-01-09T16:05:06.367Z'
                updated_at: '2022-01-09T16:05:06.367Z'
  "/api/v1/users/scoreboard/":
    get:
      summary: Get users ordered by fantasy_points
      tags:
      - User
      responses:
        '200':
          description: get users
          content:
            application/json:
              example:
              - id: 116
                username: suzette.strosin#119
                email: ma.vandervort@larson.io
                email_validated: true
                preferred_lang: ru_RU
                avatar_id: 
                coins: 2967833772
                fantasy_points: 9980057018
                created_at: '2022-01-09T16:05:06.668Z'
                updated_at: '2022-01-09T16:05:06.668Z'
                provider: email
                uid: ma.vandervort@larson.io
                allow_password_change: false
              - id: 121
                username: bud_schneider#124
                email: mollie.brekke@ritchie.net
                email_validated: true
                preferred_lang: ru_RU
                avatar_id: 
                coins: 7034026724
                fantasy_points: 7159454482
                created_at: '2022-01-09T16:05:08.081Z'
                updated_at: '2022-01-09T16:05:08.081Z'
                provider: email
                uid: mollie.brekke@ritchie.net
                allow_password_change: false
              - id: 119
                username: august#122
                email: ericka@kassulke.org
                email_validated: true
                preferred_lang: ru_RU
                avatar_id: 
                coins: 4535324806
                fantasy_points: 4974143844
                created_at: '2022-01-09T16:05:07.521Z'
                updated_at: '2022-01-09T16:05:07.521Z'
                provider: email
                uid: ericka@kassulke.org
                allow_password_change: false
              - id: 118
                username: britteny_mueller#121
                email: jerry.konopelski@trantow-marvin.org
                email_validated: true
                preferred_lang: ru_RU
                avatar_id: 
                coins: 2183375258
                fantasy_points: 4920422317
                created_at: '2022-01-09T16:05:07.238Z'
                updated_at: '2022-01-09T16:05:07.238Z'
                provider: email
                uid: jerry.konopelski@trantow-marvin.org
                allow_password_change: false
              - id: 117
                username: faustina.kohler#120
                email: alma@ryan.org
                email_validated: true
                preferred_lang: ru_RU
                avatar_id: 
                coins: 4424343521
                fantasy_points: 1734284337
                created_at: '2022-01-09T16:05:06.953Z'
                updated_at: '2022-01-09T16:05:06.953Z'
                provider: email
                uid: alma@ryan.org
                allow_password_change: false
              - id: 120
                username: georgine_rowe#123
                email: katherin.stokes@nicolas.io
                email_validated: true
                preferred_lang: ru_RU
                avatar_id: 
                coins: 9416631163
                fantasy_points: 896829374
                created_at: '2022-01-09T16:05:07.803Z'
                updated_at: '2022-01-09T16:05:07.803Z'
                provider: email
                uid: katherin.stokes@nicolas.io
                allow_password_change: false
consumes:
- application/json
produces:
- application/json
servers:
- url: "{defaultHost}"
  variables:
    defaultHost:
      default: http://localhost:3000
components:
  securitySchemes:
    accessToken:
      type: apiKey
      in: header
      name: Access-Token
    client:
      type: apiKey
      in: header
      name: Client
    uid:
      type: apiKey
      in: header
      name: UID
security:
- accessToken: []
  client: []
  uid: []
