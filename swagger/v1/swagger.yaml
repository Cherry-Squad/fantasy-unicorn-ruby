---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/":
    post:
      summary: Create a user
      tags:
      - Auth
      parameters: []
      security: []
      responses:
        '200':
          description: user created
          content:
            application/json:
              example:
                status: success
                data:
                  id: 1
                  username: keith.bechtelar#1
                  email: paula@raynor-jerde.io
                  email_validated: false
                  preferred_lang: ru_RU
                  avatar_id:
                  coins: 0
                  fantasy_points: 0
                  created_at: '2022-01-03T15:18:44.647Z'
                  updated_at: '2022-01-03T15:18:44.650Z'
                  provider: email
                  uid: paula@raynor-jerde.io
                  allow_password_change: false
        '422':
          description: incorrect email or username; email and/or username has already
            been taken
          content:
            application/json:
              example:
                status: error
                data:
                  id:
                  username: pamelia#6
                  email: jerald
                  email_validated: false
                  preferred_lang: ru_RU
                  avatar_id:
                  coins: 0
                  fantasy_points: 0
                  created_at:
                  updated_at:
                  provider: email
                  uid: ''
                  allow_password_change: false
                errors:
                  email:
                  - is not an email
                  full_messages:
                  - Email is not an email
                  username:
                  - is too short (minimum is 3 characters)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - username
              - email
              - password
    delete:
      summary: Delete a user
      tags:
      - Auth
      responses:
        '200':
          description: user successfully deleted
          content:
            application/json:
              example:
                status: success
                message: Account with UID 'byron@howe-price.net' has been destroyed.
        '404':
          description: credentials are invalid
          content:
            application/json:
              example:
                success: false
                errors:
                - Unable to locate account for destruction.
                status: error
  "/api/v1/auth/sign_in":
    post:
      summary: Sign in
      tags:
      - Auth
      parameters: []
      security: []
      responses:
        '200':
          description: logged in
          headers:
            access-token:
              type: string
              description: Access token
            client:
              type: string
              description: Client token
            uid:
              type: string
              description: User identifier
            expiry:
              type: string
              description: Token expiry timestamp
          content:
            application/json:
              example:
                data:
                  email: fransisca@herman.org
                  email_validated: false
                  id: 6
                  fantasy_points: 0
                  coins: 0
                  uid: fransisca@herman.org
                  username: consuelo.paucek#9
                  preferred_lang: ru_RU
                  avatar_id:
                  provider: email
                  allow_password_change: false
        '401':
          description: credentials are invalid
          content:
            application/json:
              example:
                success: false
                errors:
                - Invalid login credentials. Please try again.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/auth/sign_out":
    delete:
      summary: Sign out
      tags:
      - Auth
      responses:
        '200':
          description: signed out
          content:
            application/json:
              example:
                success: true
        '404':
          description: credentials are invalid
          content:
            application/json:
              example:
                success: false
                errors:
                - User was not found or was not logged in.
  "/api/v1/auth/validate_token":
    get:
      summary: Validate token
      tags:
      - Auth
      responses:
        '200':
          description: token is valid
          content:
            application/json:
              example:
                success: true
                data:
                  id: 12
                  username: elieli#15
                  email: clifton.hessel@oconnell.co
                  email_validated: false
                  preferred_lang: ru_RU
                  avatar_id:
                  coins: 0
                  fantasy_points: 0
                  provider: email
                  uid: clifton.hessel@oconnell.co
                  allow_password_change: false
        '401':
          description: credentials are invalid
          content:
            application/json:
              example:
                success: false
                errors:
                  - Invalid login credentials
  "/api/v1/briefcase/":
    post:
      summary: Create a briefcase
      tags:
        - Briefcase
      parameters: [ ]
      responses:
        '201':
          description: briefcase created
          content:
            application/json:
              example:
                id: 1
                expiring_at: '2022-09-18T00:00:00.000Z'
                user_id: 14
                created_at: '2022-01-03T15:18:48.785Z'
                updated_at: '2022-01-03T15:18:48.785Z'
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Bad request ( invalid data )
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiring_at:
                  type: string
              required:
                - expiring_at
  "/api/v1/briefcase/{id}/":
    delete:
      summary: delete a briefcase
      tags:
        - Briefcase
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: briefcase successfully deleted
        '404':
          description: Not found 404
          content:
            application/json:
              example:
                status: Not Found 404
    get:
      summary: Retrieve a briefcase
      tags:
        - Briefcase
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: briefcase found
          content:
            application/json:
              example:
                id: 4
                expiring_at: '2022-04-01T00:00:00.000Z'
                user_id: 18
                created_at: '2022-01-03T15:18:49.484Z'
                updated_at: '2022-01-03T15:18:49.484Z'
              schema:
                type: object
                property:
                  id:
                    type: integer
                  expiring_at:
                    type: string
                  user_id:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: briefcase not found
          content:
            application/json:
              example:
                status: Not Found 404
consumes:
- application/json
produces:
- application/json
servers:
- url: "{defaultHost}"
  variables:
    defaultHost:
      default: http://localhost:3000
components:
  securitySchemes:
    accessToken:
      type: apiKey
      in: header
      name: Access-Token
    client:
      type: apiKey
      in: header
      name: Client
    uid:
      type: apiKey
      in: header
      name: UID
security:
- accessToken: []
  client: []
  uid: []
